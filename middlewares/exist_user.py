from pprint import pprint

from repositories.repo import SQLAlchemyRepo
from repositories.user_repo import UserRepo
from aiogram import BaseMiddleware, Bot
from aiogram.types import TelegramObject, CallbackQuery, Message
from typing import Any, Awaitable, Callable, Dict
from datetime import datetime

from states.all_state import MenuStates
from utils.analytics import UniqueUserPre
from queue import Queue
from database.models import Users
from aiogram.dispatcher.fsm.storage.redis import RedisStorage
from aiogram.dispatcher.fsm.storage.base import StorageKey, DEFAULT_DESTINY
from aiogram_dialog import DialogManager


class ExistsUser(BaseMiddleware):

    async def __call__(
            self,
            handler: Callable[[TelegramObject, Dict[str, Any]], Awaitable[Any]],
            event: Message or CallbackQuery,
            data: Dict[str, Any]
    ) -> Any:
        red: RedisStorage = data.get('fsm_storage')
        bot: Bot = data.get('bot')
        # chat = event.chat.id
        dialog_manager: DialogManager = data['dialog_manager']
        telegram_user = data.get('event_chat')
        objects_queue: Queue = data.get("objects_queue")
        repo: SQLAlchemyRepo = data['repo']
        user_repo: UserRepo = repo.get_repo(UserRepo)
        user: Users = await user_repo.get_user(telegram_user.id)
        text = "üìù –•–æ—Ç–∏–º —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—à–µ–≥–æ —á–∞—Ç-–±–æ—Ç–∞!\n\n" \
               "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π:\n" \
               "- –≤–Ω–µ–¥—Ä–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –æ–Ω–∏ –ø–æ–º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—é–¥–µ–π —Å –æ–±—â–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏ –∏ —Å–¥–µ–ª–∞—é—Ç –ø–æ–∏—Å–∫ –±–æ–ª–µ–µ –ø—Ä–∏—è—Ç–Ω—ã–º ‚ò∫Ô∏è\n"\
               "- –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å', –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã üî•\n"\
               "- —É–ª—É—á—à–µ–Ω —Å–ø–æ—Å–æ–± –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–∏—Å–∫–∞, —ç—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –±–æ–ª–µ–µ " \
               "—á–µ—Ç–∫–æ –≤—ã—Ä–∞–∂–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞üîç\n\n"\
               "üåÄ –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"\
               "- —Ç–µ–ø–µ—Ä—å, –ø–æ–¥ —Ç–µ–º–æ–π –∏ –≤–æ –≤—Ä–µ–º—è –¥–∏–∞–ª–æ–≥–∞, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üöπüö∫\n\n"\
               "–í —á–µ—Å—Ç—å —ç—Ç–æ–≥–æ, –º—ã –¥–µ–ª–∞–µ—Ç 25% —Å–∫–∏–¥–∫—É –Ω–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ" \
               "–ø–æ–¥–ø–∏—Å–∫–∏, —É—Å–ø–µ–π—Ç–µ –∑–∞–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ ‚ù§Ô∏è‚Äçüî•\n\n"\
               "–ù–∞ —ç—Ç–æ–º –≤—Å—ë, —Ö–æ—Ä–æ—à–µ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è –≤ –Ω–∞—à–µ–º —á–∞—Ç-–±–æ—Ç–µ, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã –≤—Å—ë –µ—â—ë —Å –Ω–∞–º–∏! üòâ"
        # st = StorageKey(bot_id=bot.id, chat_id=chat, user_id=telegram_user.id, destiny=DEFAULT_DESTINY)
        # ss = await red.get_state(bot=bot, key=st)
        if user is None:
            user = await repo.get_repo(UserRepo).add_user(
                user_id=telegram_user.id,
                username=telegram_user.username,
                first_name=telegram_user.first_name,
                last_name=telegram_user.last_name,

            )
            await bot.send_message(chat_id=telegram_user.id, text=text)
        data['user'] = user
        result = await handler(event, data)
        data.pop('user')
        return result
